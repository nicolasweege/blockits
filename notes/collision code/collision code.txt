// horizontal collision
repeat (abs(h_speed)) 
{
	var sign_hspeed = sign(h_speed);
	
	if (place_meeting(x + sign_hspeed, y, obj_default_collider)) 
	{
		h_speed = 0;
		break;
	} 
	else 
	{ 
		x += sign_hspeed;
	}
}

// vertical collision
repeat (abs(v_speed)) 
{
	var sign_vspeed = sign(v_speed);
	
	if (place_meeting(x, y + sign_vspeed, obj_default_collider)) 
	{
		if (v_speed > 0)
		{
			can_jump = 	jump_buffer_amount;
			can_dash = true;
		}
	
		v_speed = 0;
		break;
	} 
	else 
	{ 
		y += sign_vspeed; 
	}
}


// outro codigo
// horizontal collision
	if (place_meeting(x + h_speed, y, obj_default_collider))
	{
		while (abs(h_speed) > 0.1)
		{
			h_speed *= 0.5;
			if (!place_meeting(x + h_speed, y, obj_default_collider))
			{
				x += h_speed;
			}
		}
		h_speed = 0;
	}
	x += h_speed;
	
	// vertical collision
	if (place_meeting(x, y + v_speed, obj_default_collider))
	{
		if (v_speed > 0)
		{
			can_jump = 	jump_buffer_amount;
			can_dash = true;
		}
		
		while (abs(v_speed) > 0.1)
		{
			v_speed *= 0.5;
			if (!place_meeting(x, y + v_speed, obj_default_collider))
			{
				y += v_speed;
			}
		}
		v_speed = 0;
	}
	y += v_speed;